document.addEventListener("DOMContentLoaded", async function () {
    console.log("üöÄ Cargando perfil...");

    // ‚úÖ Verificar si estamos en la p√°gina correcta antes de continuar
    if (!document.getElementById("ProfileForm")) {
        console.warn("‚ö† Este script no se ejecutar√° porque no estamos en la p√°gina de perfil.");
        return;
    }

    try {
        // ‚úÖ 1Ô∏è‚É£ Verificar autenticaci√≥n ANTES de cargar el perfil
        const authResponse = await fetch("/auth/status", {
            method: "GET",
            credentials: "same-origin",
            headers: { "X-Requested-With": "XMLHttpRequest" }
        });

        if (!authResponse.ok) throw new Error("‚ùå Error al verificar autenticaci√≥n.");

        const authData = await authResponse.json();
        
        if (!authData.authenticated) {
            console.warn("‚ö† Usuario no autenticado. No se puede cargar el perfil.");
            document.getElementById("profile-container").innerHTML = 
                "<p style='color: red;'>‚ö† No est√°s autenticado. Inicia sesi√≥n para ver tu perfil.</p>";
            return;
        }

        console.log("‚úÖ Usuario autenticado:", authData.username);

        // ‚úÖ 2Ô∏è‚É£ Obtener CSRF Token SOLO si el usuario est√° autenticado
        const csrfResponse = await fetch("/csrf/get", {
            method: "GET",
            credentials: "same-origin",
            headers: { 
                "X-Requested-With": "XMLHttpRequest"
            }
        });

        if (!csrfResponse.ok) throw new Error("‚ùå CSRF request fallido.");

        const csrfData = await csrfResponse.json();
        if (csrfData.csrf_token) {
            console.log("‚úÖ CSRF Token actualizado:", csrfData.csrf_token);
        } else {
            throw new Error(`‚ö† Error en CSRF: ${csrfData.error}`);
        }

        // ‚úÖ 3Ô∏è‚É£ Obtener Datos del Perfil
        const profileResponse = await fetch("/user/profile/view", {
            method: "GET",
            credentials: "same-origin",
            headers: { "X-Requested-With": "XMLHttpRequest" }
        });

        if (profileResponse.status === 401) {
            console.warn("‚ö† No autenticado. No se puede obtener el perfil.");
            document.getElementById("ProfileForm").innerHTML = 
                "<p style='color: red;'>‚ö† No tienes permiso para ver esta p√°gina.</p>";
            return;
        }

        if (!profileResponse.ok) throw new Error("‚ùå Error al obtener el perfil.");

        const profileData = await profileResponse.json();
        console.log("‚úÖ Datos del perfil recibidos:", profileData);

        // ‚úÖ 4Ô∏è‚É£ Rellenar los datos en la p√°gina **solo si los elementos existen**
        const usernameEl = document.getElementById("username");
        const emailEl = document.getElementById("email");
        const nameEl = document.getElementById("name");
        const phoneEl = document.getElementById("phone");
        const addressEl = document.getElementById("address");

        if (usernameEl) usernameEl.textContent = profileData.username || "N/A";
        if (emailEl) emailEl.textContent = profileData.email || "N/A";
        if (nameEl) nameEl.textContent = profileData.name || "N/A";
        if (phoneEl) phoneEl.textContent = profileData.phone_number || "N/A";
        if (addressEl) addressEl.textContent = profileData.address || "N/A";

    } catch (error) {
        console.error("üö® Error en la carga del perfil:", error.message);
        alert("‚ùå No se pudo cargar el perfil. Intenta nuevamente.");
    }
});
